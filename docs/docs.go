// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/GetFcmToken": {
            "get": {
                "description": "Retrieve device information based on the provided device ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get fcm Token",
                "parameters": [
                    {
                        "description": "DeviceId",
                        "name": "userDeviceRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserDeviceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.UserDeviceResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request Body or deviceID is required",
                        "schema": {
                            "$ref": "#/definitions/model.CustomHTTPError"
                        }
                    }
                }
            }
        },
        "/GetFridgeRecipe": {
            "post": {
                "description": "Upload an image of your fridge's contents to receive a recipe recommendation.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get a recipe based on a provided fridge image",
                "parameters": [
                    {
                        "type": "file",
                        "description": "image",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully generated recipe",
                        "schema": {
                            "$ref": "#/definitions/model.RecipeResponse"
                        }
                    },
                    "400": {
                        "description": "Error with the provided image",
                        "schema": {
                            "$ref": "#/definitions/model.CustomHTTPError"
                        }
                    }
                }
            }
        },
        "/GetKitchenEnvironment": {
            "post": {
                "description": "Upload an image to analyze and get a description of the kitchen environment.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kitchen"
                ],
                "summary": "Get kitchen environment from an image",
                "parameters": [
                    {
                        "type": "file",
                        "description": "image",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.KitchenEnvironmentResponse"
                        }
                    },
                    "400": {
                        "description": "Error with image",
                        "schema": {
                            "$ref": "#/definitions/model.CustomHTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.CustomHTTPError"
                        }
                    }
                }
            }
        },
        "/StoreUserDevice": {
            "post": {
                "description": "Add a new device for a user with the provided device ID and FCM token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Add a new user device",
                "parameters": [
                    {
                        "description": "DeviceId",
                        "name": "userDevice",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserDevice"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Device added successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid body data",
                        "schema": {
                            "$ref": "#/definitions/model.CustomHTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.CustomHTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.CustomHTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "model.Ingredient": {
            "type": "object",
            "properties": {
                "locationDescription": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.KitchenEnvironmentResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                }
            }
        },
        "model.Recipe": {
            "type": "object",
            "properties": {
                "difficulty": {
                    "type": "string"
                },
                "ingredients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Ingredient"
                    }
                },
                "instructions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Step"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.RecipeResponse": {
            "type": "object",
            "properties": {
                "ingredients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Ingredient"
                    }
                },
                "recipes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Recipe"
                    }
                }
            }
        },
        "model.Step": {
            "type": "object",
            "properties": {
                "step": {
                    "type": "string"
                }
            }
        },
        "model.UserDevice": {
            "type": "object",
            "properties": {
                "deviceId": {
                    "type": "string"
                },
                "fcmToken": {
                    "type": "string"
                }
            }
        },
        "model.UserDeviceRequest": {
            "type": "object",
            "properties": {
                "deviceId": {
                    "type": "string"
                }
            }
        },
        "model.UserDeviceResponse": {
            "type": "object",
            "properties": {
                "fcmToken": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
